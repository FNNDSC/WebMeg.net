/* Function to normalize the array
 * Input : 
 * arrayVal : 1d or 2d Arrayfunction 
 * Output :
 * arrayVal : Normalized array
 */
 function normalizeArray(arrayVal, maxVal) {
    // Check for correct number of arguments
    if (arguments.length != 2) {
        return NaN;
    }
    
    // if array is of inappropriate type
    if (Object.prototype.toString.call(arrayVal) == "[object Array]") {
        return NaN;
    }
    
    if (Object.prototype.toString.call(maxVal) == "[object Number]") {
        return NaN;
    }
    
    if (arrayVal[0].length == undefined) {
        var numElements = arrayVal.length;
        for (var i = 0;i < numElements;i++) {
            arrayVal[i] = arrayVal[i]/maxVal;
        }
    }
    
    else {
        var numObjects = arrayVal.length;
        for (var i = 0;i < numObjects;i++) {
            var numElements = arrayVal[i].length;
            for (var j = 0;j < numElements;j++) {
                arrayVal[i][j] = arrayVal[i][j]/maxVal;
            }
        }
    }
    
    return arrayVal;
}
    